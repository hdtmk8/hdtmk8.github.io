<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript引用类型之数组</title>
      <link href="/2020/07/31/JavaScript%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%95%B0%E7%BB%84/"/>
      <url>/2020/07/31/JavaScript%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-数组"><a href="#JavaScript-数组" class="headerlink" title="JavaScript 数组"></a>JavaScript 数组</h1><blockquote><p><a href="https://hdtmk8.github.io/">hdtmk8.github.io</a>  @hdtmk8  </p></blockquote><p>数组是多个变量值的集合，数组是<code>Array</code>对象的实例，所以可以像对象一样调用方法。 </p><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><hr><p>使用对象方式创建数组：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,3,"hexo","hdtmk8"]</span></code></pre><p>使用字面量创建是推荐的简单作法:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdcms"</span><span class="token punctuation">,</span> <span class="token string">"houdunren"</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p>多维数组定义:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p> 数组是引用类型可以使用<code>const</code>声明并修改它的值 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hexo"</span><span class="token punctuation">,</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["hexo", "hdtmk8","js"]</span></code></pre><p> 使用原型的 <code>length</code>属性可以获取数组元素数量 </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hexo"</span><span class="token punctuation">,</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//2</span></code></pre><p> 数组可以设置任何值，下面是使用索引添加数组 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>hd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"js"</span><span class="token punctuation">;</span></code></pre><p>下面直接设置3号数组，会将1/2索引的数组定义为空值</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>hd<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"js"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//4</span></code></pre><p> 声明多个空元素的数组 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//3</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[empty × 3]</span></code></pre><h4 id="Array-of"><a href="#Array-of" class="headerlink" title="Array.of"></a>Array.of</h4><p> 使用<code>Array.of</code> 与 <code>new Array</code> 不同是设置一个参数时不会创建空元素数组 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">of</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[3]</span>hd <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1, 2, 3] </span></code></pre><h4 id="类型检测"><a href="#类型检测" class="headerlink" title="类型检测"></a>类型检测</h4><p> 检测变量是否为数组类型 :</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"hexo"</span><span class="token punctuation">,</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//false </span></code></pre><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><hr><p>可以将数组转换为字符串也可以将其他类型转换为数组</p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>大部分数据类型都可以使用<code>.toString()</code>函数转换为字符串：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1,2,3</span></code></pre><p>也可以使用函数<code>String</code>转换为字符串：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1,2,3</span></code></pre><p>或使用<code>join</code>连接为字符串：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//1-2-3</span></code></pre><h4 id="Array-from"><a href="#Array-from" class="headerlink" title="Array.from"></a>Array.from</h4><p>使用Array.from可以将类数组转换为数组，类数组指包含<code>length</code>属性或可迭代的对象。</p><ul><li><p>第一个参数为要转换的数据，第二个参数为类似于<code>map</code>函数的回调方法：  </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> str<span class="token operator">=</span><span class="token string">"hdtmk8"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">loge</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["h","d","t","m","k","8"]</span></code></pre></li></ul><p>为对象设置<code>length</code>属性后也可以转换为数组，但下标要为数值或数值字符串：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> user<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token string">"array"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span>length<span class="token punctuation">:</span><span class="token number">2</span>  <span class="token comment" spellcheck="true">//必须设置</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["array",18]</span></code></pre><h3 id="展开语法"><a href="#展开语法" class="headerlink" title="展开语法"></a>展开语法</h3><hr><h4 id="数组合并"><a href="#数组合并" class="headerlink" title="数组合并"></a>数组合并</h4><p>使用展开语法来合并数组相比<code>concat</code>要更简单，使用<code>...</code>可将数组展开为多个值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">logt</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["a","hdtmk8",1,2,3] 把a数组的元素全部都添加到b数组元素的后面</span></code></pre><h4 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h4><p>使用展开语法可以替代<code>arguments</code>来接收任意数量的参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hd</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">hd</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,3,"hdtmk8"]</span></code></pre><p>也可以用于接收部分参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hd</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">hd</span><span class="token punctuation">(</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Alex (4)[1,2,3,"hdtmk8"]</span></code></pre><h3 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h3><hr><p>解构是一种更简洁的赋值特性，可以理解为分解一个数据的结构。</p><ul><li>建议使用let/const声明</li></ul><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>基本使用语法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//数组使用</span><span class="token keyword">let</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span>url<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8.github.io"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
