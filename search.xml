<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript引用类型之数组</title>
      <link href="/2020/07/31/JavaScript%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%95%B0%E7%BB%84/"/>
      <url>/2020/07/31/JavaScript%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-数组"><a href="#JavaScript-数组" class="headerlink" title="JavaScript 数组"></a>JavaScript 数组</h1><blockquote><p><a href="https://hdtmk8.github.io/">hdtmk8.github.io</a>  @hdtmk8  </p></blockquote><p>数组是多个变量值的集合，数组是<code>Array</code>对象的实例，所以可以像对象一样调用方法。 </p><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><hr><p>使用对象方式创建数组：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,3,"hexo","hdtmk8"]</span></code></pre><p>使用字面量创建是推荐的简单作法:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdcms"</span><span class="token punctuation">,</span> <span class="token string">"houdunren"</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p>多维数组定义:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p> 数组是引用类型可以使用<code>const</code>声明并修改它的值 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hexo"</span><span class="token punctuation">,</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["hexo", "hdtmk8","js"]</span></code></pre><p> 使用原型的 <code>length</code>属性可以获取数组元素数量 </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hexo"</span><span class="token punctuation">,</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//2</span></code></pre><p> 数组可以设置任何值，下面是使用索引添加数组 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>hd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"js"</span><span class="token punctuation">;</span></code></pre><p>下面直接设置3号数组，会将1/2索引的数组定义为空值</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>hd<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"js"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//4</span></code></pre><p> 声明多个空元素的数组 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//3</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[empty × 3]</span></code></pre><h4 id="Array-of"><a href="#Array-of" class="headerlink" title="Array.of"></a>Array.of</h4><p> 使用<code>Array.of</code> 与 <code>new Array</code> 不同是设置一个参数时不会创建空元素数组 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">of</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[3]</span>hd <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1, 2, 3] </span></code></pre><h4 id="类型检测"><a href="#类型检测" class="headerlink" title="类型检测"></a>类型检测</h4><p> 检测变量是否为数组类型 :</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"hexo"</span><span class="token punctuation">,</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//false </span></code></pre><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><hr><p>可以将数组转换为字符串也可以将其他类型转换为数组</p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>大部分数据类型都可以使用<code>.toString()</code>函数转换为字符串：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1,2,3</span></code></pre><p>也可以使用函数<code>String</code>转换为字符串：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1,2,3</span></code></pre><p>或使用<code>join</code>连接为字符串：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//1-2-3</span></code></pre><h4 id="Array-from"><a href="#Array-from" class="headerlink" title="Array.from"></a>Array.from</h4><p>使用Array.from可以将类数组转换为数组，类数组指包含<code>length</code>属性或可迭代的对象。</p><ul><li><p>第一个参数为要转换的数据，第二个参数为类似于<code>map</code>函数的回调方法：  </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> str<span class="token operator">=</span><span class="token string">"hdtmk8"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">loge</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["h","d","t","m","k","8"]</span></code></pre></li></ul><p>为对象设置<code>length</code>属性后也可以转换为数组，但下标要为数值或数值字符串：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> user<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token string">"array"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span>length<span class="token punctuation">:</span><span class="token number">2</span>  <span class="token comment" spellcheck="true">//必须设置</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["array",18]</span></code></pre><h3 id="展开语法"><a href="#展开语法" class="headerlink" title="展开语法"></a>展开语法</h3><hr><h4 id="数组合并"><a href="#数组合并" class="headerlink" title="数组合并"></a>数组合并</h4><p>使用展开语法来合并数组相比<code>concat</code>要更简单，使用<code>...</code>可将数组展开为多个值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">logt</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["a","hdtmk8",1,2,3] 把a数组的元素全部都添加到b数组元素的后面</span></code></pre><h4 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h4><p>使用展开语法可以替代<code>arguments</code>来接收任意数量的参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hd</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">hd</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,3,"hdtmk8"]</span></code></pre><p>也可以用于接收部分参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hd</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">hd</span><span class="token punctuation">(</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Alex (4)[1,2,3,"hdtmk8"]</span></code></pre><h3 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h3><hr><p>解构是一种更简洁的赋值特性，可以理解为分解一个数据的结构。</p><ul><li>建议使用let/const声明</li></ul><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>基本使用语法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//数组使用</span><span class="token keyword">let</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span>url<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8.github.io"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre><p>函数使用语法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">hd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre><p>剩余解构用一个变量来接收剩余参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span><span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//["hexo","alex"];</span></code></pre><p>字符串解构：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"hdtmk8"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Array(13)</span></code></pre><p> 严格模式，非严格模式可以不使用声明指令，严格模式下必须使用声明 。所以建议使用let等声明：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">[</span>web<span class="token punctuation">,</span>url<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>web<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre><p>简洁定义，只赋值部分变量</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> <span class="token punctuation">[</span><span class="token punctuation">,</span>url<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre><p>使用展开语法获取多个值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8,["alex","hexo"];</span></code></pre><p>默认值 为变量设置默认值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span>site<span class="token operator">=</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>site<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hexo</span></code></pre><p>函数参数 数组参数的使用</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hd</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">hd</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"hddtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="合并拆分"><a href="#合并拆分" class="headerlink" title="合并拆分"></a>合并拆分</h3><hr><h4 id="join"><a href="#join" class="headerlink" title="join"></a>join</h4><p>使用<code>join</code>连接字符串：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"htdmk8"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//1-htdmk8-hexo</span></code></pre><h4 id="split"><a href="#split" class="headerlink" title="split"></a>split</h4><p><code>split</code>方法用于将字符串分割成数组，类似<code>join</code>方法的反函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> price<span class="token operator">=</span><span class="token string">"99,97,98"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">loge</span><span class="token punctuation">(</span>price<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["99","97","98"]</span></code></pre><h4 id="concat"><a href="#concat" class="headerlink" title="concat"></a>concat</h4><p><code>concat</code>方法用于连接两个或多个数组，元素是值类型是复制操作，如果是引用类型还是指向同一对象：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> array<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> cms<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>hd<span class="token punctuation">,</span>cms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["hdtmk8","alex",1,2,3,4]</span></code></pre><p>也可以使用扩展语法实现连接：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">,</span><span class="token operator">...</span>hd<span class="token punctuation">,</span><span class="token operator">...</span>cms<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["hdtmk8","alex",1,2,3,4]</span></code></pre><h4 id="copyWithin"><a href="#copyWithin" class="headerlink" title="copyWithin"></a>copyWithin</h4><p>使用<code>copyWithin</code>从数组中复制一部分到同数组中的另外位置：</p><p>语法说明：</p><pre class=" language-javascript"><code class="language-javascript">array<span class="token punctuation">.</span><span class="token function">copyWithin</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>start<span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>参数说明：</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">target</td><td align="center">必需。复制到指定目标索引位置。</td></tr><tr><td align="center">start</td><td align="center">可选。元素复制的起始位置。</td></tr><tr><td align="center">end</td><td align="center">可选。停止复制的索引位置（默认为array.length）。如果是负值，表示倒数。</td></tr></tbody></table><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">copyWithin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,1,2]</span></code></pre><h3 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h3><hr><p> 数组包含多种查找的函数，需要把这些函数掌握清楚，然后根据不同场景选择合适的函数。 </p><h4 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf"></a>indexOf</h4><p>使用<code>indexOf</code>从前向后查找元素出现的位置，如果找不到返回-1：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2 从前面查找2出现的位置</span></code></pre><p>indexOf是严格类型约束类似于===：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"7"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//-1 代表没有找到</span></code></pre><p>第二个参数用于指定查找开始的位置：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//4</span></code></pre><h4 id="IastindexOf"><a href="#IastindexOf" class="headerlink" title="IastindexOf"></a>IastindexOf</h4><p>使用<code>lastindexOf</code>从后向前查找元素出现的位置，如果找不到返回-1：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//3 从后查找7出现的位置</span></code></pre><p>第二个参数用于指定查找开始位置</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//从第5个元素向前查找</span>console<span class="token punctuation">.</span><span class="token function">loge</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//从最后一个字符向前查找</span></code></pre><h4 id="includes"><a href="#includes" class="headerlink" title="includes"></a>includes</h4><p>使用<code>includes</code>查找字符串返回值是布尔类型更方便判断：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span></code></pre><p>写一个类似<code>includes</code>功能的函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">includes</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> array<span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">===</span><span class="token operator">=</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span></code></pre><h4 id="find"><a href="#find" class="headerlink" title="find"></a>find</h4><p>find方法找到后会把值返回出来</p><ul><li>如果找不到返回值为<code>undefined</code></li></ul><p>返回第一次找到的值，不继续查找</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> find<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> item<span class="token operator">==</span><span class="token string">"hexo"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hexo</span></code></pre><p>也可以使用<code>find</code>把元素遍历出来：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> find<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hexo</span></code></pre><p>使用<code>includes</code>等不能查找引用类型，因为它们的内存地址不是相等的：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> user<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">"李四"</span><span class="token punctuation">}</span>，<span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">"张飞"</span><span class="token punctuation">}</span>，<span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> find<span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//undefined</span></code></pre><p><code>find</code>可以方便的查找引用类型：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"李四"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"张三"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"alex"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> find <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>user <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"alex"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//{name:"alex"}</span></code></pre><h4 id="findIndex"><a href="#findIndex" class="headerlink" title="findIndex"></a>findIndex</h4><p><code>findIndex</code>与<code>find</code>的区别是返回索引 值，参数也是：当前值，索引，操作数组</p><ul><li>查找不到时返回-<code>1</code></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"7"</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token function">functio</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> item<span class="token operator">==</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//7</span></code></pre><h4 id="find原理"><a href="#find原理" class="headerlink" title="find原理"></a>find原理</h4><p>下面使用自定义函数</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">find</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>callback<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token keyword">return</span> value<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> undefined<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> res<span class="token operator">=</span><span class="token function">find</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token function">fuctdion</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> item <span class="token operator">==</span> <span class="token number">23</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h3><hr><h4 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h4><p><code>sort</code>每次使用两个值进行比较Array.sort((a,a)=&gt;a-b)</p><ul><li>返回负数a排在b前面，从小到大</li><li>返回正数b排在a前面，从大到小</li><li>返回0时不动</li></ul><p>默认从小到大排序数组元素</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>consosle<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,4,5,7]</span></code></pre><p>使用排序函数从大到小排序，参数一与参数二比较，返回正数为降序，负数为升序：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>v1<span class="token punctuation">,</span>v2<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> v2<span class="token operator">-</span>v1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[9,4,2,1]</span></code></pre><p>下面是按课程点击数由高到低排序 ：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons<span class="token operator">=</span><span class="token punctuation">[</span>  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"媒体查询响应式布局"</span><span class="token punctuation">,</span> click<span class="token punctuation">:</span> <span class="token number">78</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"FLEX 弹性盒模型"</span><span class="token punctuation">,</span> click<span class="token punctuation">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"MYSQL多表查询随意操作"</span><span class="token punctuation">,</span> click<span class="token punctuation">:</span> <span class="token number">99</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> sortLessons <span class="token operator">=</span> lessons<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> v2<span class="token punctuation">.</span>click <span class="token operator">-</span> v1<span class="token punctuation">.</span>click<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sortLessons<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="排序原理"><a href="#排序原理" class="headerlink" title="排序原理"></a>排序原理</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">sort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>callback<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> n <span class="token keyword">in</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> m <span class="token keyword">in</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">,</span>array<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">let</span> temp<span class="token operator">=</span>array<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>                array<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">=</span>array<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span>                array<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> array<span class="token punctuation">;</span><span class="token punctuation">}</span>arr<span class="token operator">=</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h4><p>反转数组排序</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[9,2,4,1]</span></code></pre><h3 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h3><hr><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="for"><a href="#for" class="headerlink" title="for"></a>for</h4><p>根据数组长度结合<code>for</code>循环来遍历数组：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lessons<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  lessons<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token string">`后盾人: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>lessons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lessons<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="for-in"><a href="#for-in" class="headerlink" title="for/in"></a>for/in</h4><p>遍历时的key值为数组的索引：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> lessons<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`标题: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>lessons<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="for-of"><a href="#for-of" class="headerlink" title="for/of"></a>for/of</h4><p>与<code>for/in</code>不同的是<code>for/of</code>每次循环取其中的值面不是索引：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> lessons<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`    标题: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">    栏目: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>category <span class="token operator">==</span> <span class="token string">"css"</span> <span class="token operator">?</span> <span class="token string">"前端"</span> <span class="token punctuation">:</span> <span class="token string">"数据库"</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">  `</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h4><p><code>forEach</code>使函数作用在每个数组元素上，但是没有返回值，下面盒子是截取标签的一个字符：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>lessons<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>    item<span class="token punctuation">.</span>title <span class="token operator">=</span> item<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lessons<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="迭代器操作数组元素"><a href="#迭代器操作数组元素" class="headerlink" title="迭代器操作数组元素"></a>迭代器操作数组元素</h3><hr><h4 id="keys"><a href="#keys" class="headerlink" title="keys"></a>keys</h4><p>通过迭代对象获取索引：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> hd<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> keys<span class="token operator">=</span>hd<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//此时keys就是一个可迭代对象，就可以使用next()方法</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keys<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keys<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>获取数组所有键 ：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"迭代器"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> arr<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>使用while遍历：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span>value<span class="token punctuation">,</span>done<span class="token punctuation">}</span><span class="token operator">=</span>values<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> done<span class="token operator">===</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="values"><a href="#values" class="headerlink" title="values"></a>values</h4><p>通过迭代对象获取值</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> values <span class="token operator">=</span> hd<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>获取数组的所有值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> arr<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="entries"><a href="#entries" class="headerlink" title="entries"></a>entries</h4><p>返回数组所有键值对，下面使用解构语法循环：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span>value<span class="token punctuation">]</span> <span class="token keyword">of</span> arr<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="扩展方法"><a href="#扩展方法" class="headerlink" title="扩展方法"></a>扩展方法</h3><hr><h4 id="every"><a href="#every" class="headerlink" title="every"></a>every</h4><p><code>every</code>用于递归的检测元素，要所有元素操作都要返回真结果才为真。</p><p>查看班级中同学的JS成绩是否都及格：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> js<span class="token punctuation">:</span> <span class="token number">89</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"马六"</span><span class="token punctuation">,</span> js<span class="token punctuation">:</span> <span class="token number">55</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> js<span class="token punctuation">:</span> <span class="token number">78</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> resust<span class="token operator">=</span>user<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> user<span class="token punctuation">.</span>js <span class="token operator">>=</span><span class="token number">60</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resust<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>标题的关键词检查：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'hdtmk8'</span><span class="token punctuation">,</span> <span class="token string">'JS'</span><span class="token punctuation">,</span> <span class="token string">'css'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> title <span class="token operator">=</span> <span class="token string">'我的个人博客地址hdtmk8.github.io'</span><span class="token punctuation">;</span><span class="token keyword">let</span> state <span class="token operator">=</span> words<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> title<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'标题必须包含所有关键词'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="some"><a href="#some" class="headerlink" title="some"></a>some</h4><p>使用<code>some</code>函数可以递归的检测元素，如果有一个返回true,表达式结果就是真。第一个参数为元素，第二个参数为索引，第三个参数为原数组。</p><p>下面是使用<code>some</code>检测规则关键词的示例，如果匹配到一个词就提示违规：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'hdtmk8'</span><span class="token punctuation">,</span> <span class="token string">'JS'</span><span class="token punctuation">,</span> <span class="token string">'css'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> title <span class="token operator">=</span> <span class="token string">'我的个人博客地址hdtmk8.github.io'</span><span class="token punctuation">;</span><span class="token keyword">let</span> state <span class="token operator">=</span> words<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> title<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"标题含有违规关键词"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p>使用<code>filter</code>可以过滤数据中元素，下面是获取所有在css栏目的课程：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> cssLessons<span class="token operator">=</span>lessons<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>category<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'css'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cssLessons<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>过滤元素的方法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">except</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> excepts<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> newArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> elem <span class="token keyword">of</span> array<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>excepts<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">)</span> newArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> newArray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">except</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,4]</span></code></pre><h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><p>使用<code>map</code>映射可以在数组的所有元素上应用函数，用于映射出新的值。</p><p>获取数组所有标题组合的新数组：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lessons<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span>item<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>为所有标题添加上hdtmk8：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>lessons<span class="token operator">=</span>lessons<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token punctuation">{</span>    item<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token template-string"><span class="token string">`[hdtmk8]</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">[</span><span class="token string">"title"</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>    <span class="token keyword">return</span> item<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lessons<span class="token punctuation">)</span></code></pre><h4 id="超好用的reduce"><a href="#超好用的reduce" class="headerlink" title="超好用的reduce"></a>超好用的reduce</h4><p>使用<code>reduce</code>与reduceRight函数可以迭代数组的所有元素，<code>reduce</code>从前开始，<code>reduceRight</code>从后面开始。</p><p>第一个参数是执行函数，第二个参数为初始值</p><ul><li>传入第二个参数时将所有元素循环一遍</li><li>不传第二个参数时从第二个元素开始循环</li></ul><p>函数参数说明如下：</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">prev</td><td align="center">上次调用回调函数返回的结果</td></tr><tr><td align="center">cur</td><td align="center">当前的元素值</td></tr><tr><td align="center">index</td><td align="center">当前的索引</td></tr><tr><td align="center">array</td><td align="center">原数组</td></tr></tbody></table><p>统计元素出现的次数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">countArrayElem</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>elem<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduct</span><span class="token punctuation">(</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span>cur<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">(</span>total<span class="token operator">+</span><span class="token operator">=</span>cur<span class="token operator">==</span>elem<span class="token operator">?</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> numbers<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countArrayElem</span><span class="token punctuation">(</span>numbers<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//2</span></code></pre><p>取数组中的最大值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">arrayMax</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span>max<span class="token punctuation">,</span>elem<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">(</span>max <span class="token operator">></span> elem <span class="token operator">?</span> max <span class="token punctuation">:</span> elem<span class="token punctuation">)</span><span class="token punctuation">,</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">arrayMax</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p> 取价格最高的商品 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> cart <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"iphone"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">12000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"imac"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">25000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"ipad"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">3600</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">maxPrice</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span>goods<span class="token punctuation">,</span>elem<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">(</span>goods<span class="token punctuation">.</span>price <span class="token operator">></span>  elem<span class="token punctuation">.</span>price <span class="token operator">?</span> goods<span class="token punctuation">:</span>elem<span class="token punctuation">)</span><span class="token punctuation">,</span>    array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">maxPrice</span><span class="token punctuation">(</span>cart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>计算购物车中商品总价：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> cart <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"iphone"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">12000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"imac"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">25000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"ipad"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">3600</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> total<span class="token operator">=</span>cart<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span>total<span class="token punctuation">,</span>goods<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>total<span class="token operator">+</span><span class="token operator">=</span>goods<span class="token punctuation">.</span>price<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//40600</span></code></pre><p>获取价格超过1万的商品名称：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> goods <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"iphone"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">12000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"imac"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">25000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"ipad"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">3600</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getNameByPrice</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>price<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>goods<span class="token punctuation">,</span>elem<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>elem<span class="token punctuation">.</span>price <span class="token operator">></span> price<span class="token punctuation">)</span><span class="token punctuation">{</span>            goods<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> goods<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>elem<span class="token operator">=</span><span class="token operator">></span>elem<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token function">getNameByPrice</span><span class="token punctuation">(</span>goods<span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>使用<code>reduce</code>实现数组去重：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> filterArr<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span>cur<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pre<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token operator">===</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        pre<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span>pre<span class="token punctuation">,</span>cur<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> pre<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filterArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,6]</span></code></pre><h3 id="动画案例"><a href="#动画案例" class="headerlink" title="动画案例"></a>动画案例</h3><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token operator">&lt;</span>style<span class="token operator">></span>      body <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>        height<span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>        display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        justify<span class="token operator">-</span>content<span class="token punctuation">:</span> center<span class="token punctuation">;</span>        align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>        background<span class="token punctuation">:</span> #2c3e50<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token operator">*</span> <span class="token punctuation">{</span>        padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      div <span class="token punctuation">{</span>        color<span class="token punctuation">:</span> #9b59b6<span class="token punctuation">;</span>        font<span class="token operator">-</span>size<span class="token punctuation">:</span> 5em<span class="token punctuation">;</span>        font<span class="token operator">-</span>weight<span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        text<span class="token operator">-</span>transform<span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>        cursor<span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      div <span class="token operator">></span> span <span class="token punctuation">{</span>        position<span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        display<span class="token punctuation">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token punctuation">.</span>changeColor <span class="token punctuation">{</span>        animation<span class="token operator">-</span>name<span class="token punctuation">:</span> changeColor<span class="token punctuation">;</span>        animation<span class="token operator">-</span>duration<span class="token punctuation">:</span> 1s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>direction<span class="token punctuation">:</span> alternate<span class="token punctuation">;</span>        animation<span class="token operator">-</span>iteration<span class="token operator">-</span>count<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>        animation<span class="token operator">-</span>timing<span class="token operator">-</span><span class="token keyword">function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      @keyframes changeColor <span class="token punctuation">{</span>        <span class="token number">50</span><span class="token operator">%</span> <span class="token punctuation">{</span>          color<span class="token punctuation">:</span> #f1c40f<span class="token punctuation">;</span>          transform<span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        to <span class="token punctuation">{</span>          color<span class="token punctuation">:</span> #9b59b6<span class="token punctuation">;</span>          transform<span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>  <span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>houdunren<span class="token punctuation">.</span>com<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">let</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">[</span><span class="token operator">...</span>div<span class="token punctuation">.</span>textContent<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> cur<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      pre <span class="token operator">==</span> index <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"span"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      span<span class="token punctuation">.</span>textContent <span class="token operator">=</span> cur<span class="token punctuation">;</span>      div<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>span<span class="token punctuation">)</span><span class="token punctuation">;</span>      span<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mouseover"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"changeColor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      span<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"animationend"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"changeColor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
