<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript之探索函数</title>
      <link href="/2020/08/02/JavaScript%E4%B9%8B%E6%8E%A2%E7%B4%A2%E5%87%BD%E6%95%B0/"/>
      <url>/2020/08/02/JavaScript%E4%B9%8B%E6%8E%A2%E7%B4%A2%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h1><blockquote><p><a href="https://hdttmk.github.io/" target="_blank" rel="noopener">hdttmk8</a>@hdttmk8</p></blockquote><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><hr><p>函数是将复用的代码封装起来的模块，在JS中函数还有与其他语言所不具备的特性。</p><h3 id="声明定义"><a href="#声明定义" class="headerlink" title="声明定义"></a>声明定义</h3><p>在JS中函数也是对象函数是<code>Function</code>类的创建的实例:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hdt<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span><span class="token string">"console.log(title)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token string">"hdttmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdttmk8</span></code></pre><p>标准语法是使用函数声明来定义函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hdt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">++</span>num<span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>对象字面量属性函数简写：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> user<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token keyword">null</span><span class="token punctuation">;</span>    getName<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//简写形式</span>    <span class="token function">setName</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">//可以把(:function)省略掉。</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>value<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"hdttmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdttmk8</span></code></pre><p>把函数赋值给一个变量，后面的花括号需要加<code>;</code>： </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hdt<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">++</span>title<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>全局函数会声明在window对象中，这是个历史遗留问题，建议使用模块处理：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>screenX<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//2200 返回网页距离显示屏左边的距离</span></code></pre><p>假如我们定义了screenX函数后，就覆盖了window.screenX方法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">screenX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">"hdttmk8"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>screenX<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdttmk8 与系统中的函数冲突</span></code></pre><p>使用<code>let/const</code>定义匿名函数时不会压入window：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hdt<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hdttmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//匿名函数的花括号需要加;</span>window<span class="token punctuation">.</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//window.hdt is not a function</span></code></pre><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><p> 函数是对象所以可以通过赋值来指向到函数对象的指针，当然指针也可以传递给其他变量，注意后面要以<code>;</code>结束。下面使用函数表达式将 <code>匿名函数</code> 赋值给变量 </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hdt<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">++</span>num<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hdt <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span><span class="token keyword">let</span> cms<span class="token operator">=</span>hdt<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">cms</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>标准声明的函数优先级更高，解析器会优先提取函数并放在代码树顶端，所以标准声明函数位置不限制，所以下面的代码可以正常执行。</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">hdt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">++</span>num<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//解析器会把函数体自动提升到前面</span></code></pre><p>标准声明优先级高于赋值声明：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//4</span><span class="token keyword">function</span> <span class="token function">hdt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">++</span>nu<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> hdt<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">"hdt"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>程序中经常使用匿名函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> sum<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//6</span></code></pre><h3 id="立即执行"><a href="#立即执行" class="headerlink" title="立即执行"></a>立即执行</h3><p>立即执行函数指函数定义时立即执行</p><ul><li>可以用来定义私有作用域防止污染全局作用域：</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> web<span class="token operator">=</span><span class="token string">"hdttmk8"</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>web<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这个函数无需调用就会立即执行</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>web<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//web is not defined</span></code></pre><p>使用<code>let/const</code>有块作用域特性，所以使用以下方式也可以产生私有作用域：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">{</span>    <span class="token keyword">let</span> web<span class="token operator">=</span><span class="token string">"hdttmk8"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>web<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// web is not defined</span></code></pre><p>开放接口调用函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">{</span>    <span class="token keyword">function</span> <span class="token function">hdt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hdttmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    window<span class="token punctuation">.</span>fun1<span class="token operator">=</span><span class="token punctuation">{</span>hdt<span class="token punctuation">,</span>age<span class="token punctuation">}</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun1<span class="token punctuation">.</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdttmk8</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun1<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//18</span></code></pre><h3 id="函数提升"><a href="#函数提升" class="headerlink" title="函数提升"></a>函数提升</h3><p> 函数也会提升到前面，优先级高于<code>var</code>变量提高 ：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdttmk8</span><span class="token keyword">function</span> <span class="token function">hdt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">'hdttmk8'</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>变量函数定义不会被提升：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdttmk8</span><span class="token keyword">function</span> <span class="token function">hdt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">'hdttmk8'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> hdt <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">'com'</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="形参实参"><a href="#形参实参" class="headerlink" title="形参实参"></a>形参实参</h3><p>形参是在函数声明时设置的参数，实参指在调用函数时传递的值。</p><ul><li>形参数量大于实参时，没有传参的形参值为 undefined</li><li>实参数量大于形参时，多于的实参将忽略并不会报错</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// n1,n2 为形参</span><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> n1<span class="token operator">+</span>n2<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 参数 2,3 为实参</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//5</span></code></pre><p> 当没传递参数时值为undefined ：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> n1 <span class="token operator">+</span> n2<span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//NaN</span></code></pre><h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//total:总价 year:年数</span><span class="token keyword">function</span> <span class="token function">avg</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span>year<span class="token punctuation">)</span><span class="token punctuation">{</span>    year<span class="token operator">=</span>year <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>total<span class="token operator">/</span>year<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">avg</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>在函数参数中使用默认参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">avg</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span>year<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>total<span class="token operator">/</span>year<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">avg</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>排序操作：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">sortArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>type<span class="token operator">=</span><span class="token string">"asc"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>type<span class="token operator">==</span><span class="token string">"asc"</span><span class="token operator">?</span>a<span class="token operator">-</span>b<span class="token punctuation">:</span>b<span class="token operator">-</span>a<span class="token punctuation">)</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sortArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"desc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>默认参数要放在最后面：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//total:价格,discount:折扣,dis:折后折</span><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>toabl<span class="token punctuation">,</span>discount<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>dis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> total<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>discount<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>dis<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre><h3 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h3><p>函数可以做为参数传递，这也是大多数语言都支持的语法规则：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>订阅<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'感谢订阅'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>函数可以做为参数传递：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">filterFun</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> item<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> hdt<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>filterFun<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hdt<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span></code></pre><h3 id="arguments"><a href="#arguments" class="headerlink" title="arguments"></a>arguments</h3><p><code>arguments</code>是函数获得到所有参数集合：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>total<span class="token operator">+</span><span class="token operator">=</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//20</span></code></pre><p>使用展开语法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//20</span></code></pre><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>箭头函数是函数声明的简写形式，在使用递归调用、构造函数、事件处理器时不建议使用箭头函数。</p><p>无参数时使用空括号即可：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> sum<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//3</span></code></pre><p>函数体为单一表达式时不需要<code>return</code>返回处理，系统会自动返回表达式计算结果：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> sum<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//4</span></code></pre><p>多参数传递与普通声明函数一样使用逗号分隔：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hdt<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">return</span> item<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hdt<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>只有一个参数时可以省略括号：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hdt<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span> item <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hdt<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="递归调用"><a href="#递归调用" class="headerlink" title="递归调用"></a>递归调用</h3><p>递归指函数内部调用自身的方式。</p><ul><li>主要用于数量不确定的循环操作</li><li>要有退出时机否则会陷入死循环</li></ul><p>下面通过阶乘体验：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">factorial</span><span class="token punctuation">(</span>num<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> num <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> num<span class="token punctuation">:</span>num<span class="token operator">*</span><span class="token function">factorial</span><span class="token punctuation">(</span><span class="token operator">--</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">factorial</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//120</span></code></pre><p>累加计算方法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token operator">...</span>num<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> num<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span><span class="token punctuation">:</span>num<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token operator">...</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//21</span></code></pre><p>递归打印倒三角：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">*</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">*</span><span class="token operator">**</span><span class="token operator">*</span><span class="token keyword">function</span> <span class="token function">star</span><span class="token punctuation">(</span>row <span class="token operator">=</span><span class="token number">5</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>row<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"&lt;/br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">star</span><span class="token punctuation">(</span><span class="token operator">--</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>使用递归修改课程点击数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>    title<span class="token punctuation">:</span> <span class="token string">"媒体查询响应式布局"</span><span class="token punctuation">,</span>    click<span class="token punctuation">:</span> <span class="token number">89</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    title<span class="token punctuation">:</span> <span class="token string">"FLEX 弹性盒模型"</span><span class="token punctuation">,</span>    click<span class="token punctuation">:</span> <span class="token number">45</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    title<span class="token punctuation">:</span> <span class="token string">"GRID 栅格系统"</span><span class="token punctuation">,</span>    click<span class="token punctuation">:</span> <span class="token number">19</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    title<span class="token punctuation">:</span> <span class="token string">"盒子模型详解"</span><span class="token punctuation">,</span>    click<span class="token punctuation">:</span> <span class="token number">29</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">change</span><span class="token punctuation">(</span>lessons<span class="token punctuation">,</span> num<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> lessons<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> lessons<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  lessons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>click <span class="token operator">+</span><span class="token operator">=</span> num<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">change</span><span class="token punctuation">(</span>lessons<span class="token punctuation">,</span> num<span class="token punctuation">,</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token function">change</span><span class="token punctuation">(</span>lessons<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h3><p>在某个时刻被其他函数调用的函数称为回调函数，比如处理键盘、鼠标事件的函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">'hdt'</span><span class="token operator">></span>button<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>     document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'hdt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'通过回调函数调用'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>使用回调函数递增计算：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hdt<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span>item <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hdt<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="展开语法"><a href="#展开语法" class="headerlink" title="展开语法"></a>展开语法</h3><p>展示语法或称点语法体现的就是<code>收/放</code>特性，做为值时是放，做为接收变量时是<code>收</code>：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hdt<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span>hdt<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//2</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//3</span><span class="token punctuation">[</span><span class="token operator">...</span>hdt<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hdt<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//[1,2,3]</span></code></pre><p>使用展开语法可以替代<code>arguments</code>来接收任意数量的参数:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hdt</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"hdttmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,3,"hdttmk8"]</span></code></pre><p>也可以用于接收部分参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hdt</span><span class="token punctuation">(</span>site<span class="token punctuation">,</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>site<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//"hdttmk8" (3)[1,2,3]</span><span class="token punctuation">}</span><span class="token function">hdt</span><span class="token punctuation">(</span><span class="token string">"hdttmk8"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>使用<code>...</code>可以接受传入的多个参数合并为数组，下面是使用点语法进行求合计算：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token operator">...</span>params<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> params<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span>cur<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>pre <span class="token operator">+</span> cur<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p> 多个参数时<code>...参数</code>必须放后面，下面计算购物车商品折扣 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>discount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">...</span>prices<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> total <span class="token operator">=</span> prices<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> pre <span class="token operator">+</span> cur<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> total <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> discount<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">299</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="标签函数"><a href="#标签函数" class="headerlink" title="标签函数"></a>标签函数</h3><p> 使用函数来解析标签字符串，第一个参数是字符串值的数组，其余的参数为标签变量。:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hdt</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token operator">...</span>values<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["站点", "-", "", raw: Array(3)]</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["hdttmk8", "hdttmk8.github.io"]</span><span class="token punctuation">}</span><span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">'hdttmk8'</span><span class="token punctuation">,</span>url <span class="token operator">=</span> <span class="token string">'houdunren.com'</span><span class="token punctuation">;</span>hdt <span class="token template-string"><span class="token string">`站点</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span></code></pre><h2 id="this"><a href="#this" class="headerlink" title="this"></a>this</h2><hr><p>调用函数时 <code>this</code> 会隐式传递给函数指函数调用时的关联对象，也称之为函数的上下文。</p><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><p>全局环境下<code>this</code>就是window对象的引用</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>使用严格模式时在全局函数内<code>this</code>为<code>undefined</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> hdt <span class="token operator">=</span> <span class="token string">'hdttmk8'</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token string">"use strict"</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hdt<span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//严格模式将产生错误 Cannot read property 'name' of undefined</span></code></pre><h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><p>函数为对象的方法时<code>this</code> 指向该对象</p><p>可以使用多种方式创建对象，下面是使用构造函数创建对象</p><p><strong>构造函数</strong></p><p>函数当被 <code>new</code> 时即为构造函数，一般构造函数中包含属性与方法。函数中的上下文指向到实例对象。</p><ul><li>构造函数主要用来生成对象，里面的this默认就是指当前对象</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"hdttmk8"</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//User {name: "hdttmk8", say: ƒ}</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> hdt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hdt<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdttmk8</span></code></pre><p><strong>对象字面量</strong></p><ul><li>下例中的hdt函数不属于对象方法所以指向<code>window</code></li><li>show属于对象方法执向 <code>obj</code>对象</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>  site<span class="token punctuation">:</span> <span class="token string">"hdttmk8"</span><span class="token punctuation">,</span>  <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>site<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdttmk8</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`this in show method: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//this in show method: [object Object]</span>    <span class="token keyword">function</span> <span class="token function">hdt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span><span class="token punctuation">.</span>site<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//undefined</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`this in hdt function: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//this in hdt function: [object Window]</span>    <span class="token punctuation">}</span>    <span class="token function">hdt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>obj<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在方法中使用函数时有些函数可以改变this如<code>forEach</code>，当然也可以使用后面介绍的<code>apply/call/bind</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> Lesson <span class="token operator">=</span> <span class="token punctuation">{</span>  site<span class="token punctuation">:</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">,</span>  lists<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"js"</span><span class="token punctuation">,</span> <span class="token string">"css"</span><span class="token punctuation">,</span> <span class="token string">"mysql"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lists<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>site<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Lesson<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>也可以在父作用域中定义引用<code>this</code>的变量</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> Lesson <span class="token operator">=</span> <span class="token punctuation">{</span>    site<span class="token punctuation">:</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">,</span>    lists<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"js"</span><span class="token punctuation">,</span> <span class="token string">"css"</span><span class="token punctuation">,</span> <span class="token string">"mysql"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lists<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>self<span class="token punctuation">.</span>site<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Lesson<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="箭头函数-1"><a href="#箭头函数-1" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>箭头函数没有<code>this</code>, 也可以理解为箭头函数中的<code>this</code> 会继承定义函数时的上下文，可以理解为和外层函数指向同一个this。</p><ul><li>如果想使用函数定义时的上下文中的this，那就使用箭头函数</li></ul><p>下例中的匿名函数的执行环境为全局所以 <code>this</code> 指向 <code>window</code>。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">'hdtcms'</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">'hdttmk8'</span><span class="token punctuation">,</span>  getName<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//返回window.name的值hdtcms</span></code></pre><p>以往解决办法会匿名函数调用处理定义变量，然后在匿名函数中使用。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">'hdtcms'</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">'hdttmk8'</span><span class="token punctuation">,</span>  getName<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//返回window.name的值hdtcms</span></code></pre><p>使用箭头函数后 <code>this</code> 为定义该函数的上下文，也可以理解为定义时父作用域中的<code>this</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">'hdtcms'</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">'hdttmk8'</span><span class="token punctuation">,</span>  getName<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdttmk8</span></code></pre><p>事件中使用箭头函数结果不是我们想要的</p><ul><li>事件函数可理解为对象<code>onclick</code>设置值，所以函数声明时<code>this</code>为当前对象</li><li>但使用箭头函数时<code>this</code>为声明函数上下文</li></ul><p>下面体验使用普通事件函数时<code>this</code>指向元素对象</p><p>使用普通函数时<code>this</code>为当前DOM对象</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>button desc<span class="token operator">=</span><span class="token string">"hdtcms"</span><span class="token operator">></span>button<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">let</span> Dom <span class="token operator">=</span> <span class="token punctuation">{</span>    site<span class="token punctuation">:</span> <span class="token string">"hdttmk8"</span><span class="token punctuation">,</span>    <span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"desc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  Dom<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>下面是使用箭头函数时this指向上下文对象</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>button desc<span class="token operator">=</span><span class="token string">"hdtcms"</span><span class="token operator">></span>button<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">let</span> Dom <span class="token operator">=</span> <span class="token punctuation">{</span>    site<span class="token punctuation">:</span> <span class="token string">"hdttmk8"</span><span class="token punctuation">,</span>    <span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> event <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>site <span class="token operator">+</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  Dom<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>使用<code>handleEvent</code>绑定事件处理器时，<code>this</code>指向当前对象而不是DOM元素。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>button desc<span class="token operator">=</span><span class="token string">"hdtcms"</span><span class="token operator">></span>button<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">let</span> Dom <span class="token operator">=</span> <span class="token punctuation">{</span>    site<span class="token punctuation">:</span> <span class="token string">"hdttmk8"</span><span class="token punctuation">,</span>    handleEvent<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  Dom<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h2 id="apply-call-bind"><a href="#apply-call-bind" class="headerlink" title="apply/call/bind"></a>apply/call/bind</h2><p>改变this指针，也可以理解为对象借用方法，就现像生活中向邻居借东西一样的事情。</p><h3 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h3><p>构造函数中的<code>this</code>默认是一个空对象，然后构造函数处理后把这个空对象变得有值。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">User</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> hdt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"hdttmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>可以改变构造函数中的空对象，即让构造函数this指向到另一个对象。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">User</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> hdtcms <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>User<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>hdtcms<span class="token punctuation">,</span> <span class="token string">"hdtCMS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hdtcms<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtCMS</span></code></pre><h3 id="apply-call"><a href="#apply-call" class="headerlink" title="apply/call"></a>apply/call</h3><p>call与apply 用于显示的设置函数的上下文，两个方法作用一样都是将对象绑定到this，只是在传递参数上有所不同。</p><ul><li>apply 用数组传参</li><li>call 需要分别传参</li><li>与 bind 不同 call/apply 会立即执行函数</li></ul><p>语法使用介绍</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> lisi <span class="token operator">=</span> <span class="token punctuation">{</span>    name<span class="token punctuation">:</span> <span class="token string">'李四'</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> wangwu <span class="token operator">=</span> <span class="token punctuation">{</span>    name<span class="token punctuation">:</span> <span class="token string">'王五'</span><span class="token punctuation">}</span><span class="token punctuation">;</span>show<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>lisi<span class="token punctuation">,</span> <span class="token string">'hdttmk8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>show<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>wangwu<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'hdtCMS'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>使用 <code>call</code> 设置函数上下文</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>button message<span class="token operator">=</span><span class="token string">"hdttmk8"</span><span class="token operator">></span>button<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button message<span class="token operator">=</span><span class="token string">"hdtcms"</span><span class="token operator">></span>button<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> bts <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bts<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        bts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> show<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>bts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>找数组中的数值最大值</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//NaN</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>max<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//8</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//8</span></code></pre><p>实现构造函数属性继承</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//组合请求参数</span>    <span class="token keyword">let</span> option <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>i <span class="token operator">=</span><span class="token operator">></span> i <span class="token operator">+</span> <span class="token string">"="</span> <span class="token operator">+</span> params<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`获取数据 API:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>option<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//文章控制器</span><span class="token keyword">function</span> <span class="token function">Article</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token string">"article/index"</span><span class="token punctuation">;</span>  Request<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> hdt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Article</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>  hdt<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    row<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>    start<span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//课程控制器</span><span class="token keyword">function</span> <span class="token function">Lesson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token string">"lesson/index"</span><span class="token punctuation">;</span>  Request<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> js <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Lesson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>  js<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    row<span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>制作显示隐藏面板</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style<span class="token operator">></span>    <span class="token operator">*</span> <span class="token punctuation">{</span>        padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    body <span class="token punctuation">{</span>        display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        justify<span class="token operator">-</span>content<span class="token punctuation">:</span> center<span class="token punctuation">;</span>        align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>        width<span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>        height<span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    dl <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>        display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        flex<span class="token operator">-</span>direction<span class="token punctuation">:</span> column<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    dt <span class="token punctuation">{</span>        background<span class="token punctuation">:</span>  e67e22<span class="token punctuation">;</span>        border<span class="token operator">-</span>bottom<span class="token punctuation">:</span> solid 2px  <span class="token number">333</span><span class="token punctuation">;</span>        height<span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        justify<span class="token operator">-</span>content<span class="token punctuation">:</span> center<span class="token punctuation">;</span>        align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>        cursor<span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    dd <span class="token punctuation">{</span>        height<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        background<span class="token punctuation">:</span>  bdc3c7<span class="token punctuation">;</span>        font<span class="token operator">-</span>size<span class="token punctuation">:</span> 5em<span class="token punctuation">;</span>        text<span class="token operator">-</span>align<span class="token punctuation">:</span> center<span class="token punctuation">;</span>        line<span class="token operator">-</span>height<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>dl<span class="token operator">></span>        <span class="token operator">&lt;</span>dt<span class="token operator">></span>hdttmk8<span class="token operator">&lt;</span><span class="token operator">/</span>dt<span class="token operator">></span>        <span class="token operator">&lt;</span>dd<span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>dd<span class="token operator">></span>        <span class="token operator">&lt;</span>dt<span class="token operator">></span>hdtcms<span class="token operator">&lt;</span><span class="token operator">/</span>dt<span class="token operator">></span>        <span class="token operator">&lt;</span>dd hidden<span class="token operator">=</span><span class="token string">"hidden"</span><span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>dd<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dl<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">function</span> <span class="token function">panel</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> dds <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    dds<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> item<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">,</span> <span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    dds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"dt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dt<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    dt<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> panel<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h3><p>bind()是将函数绑定到某个对象，比如 a.bind(hdt) 可以理解为将a函数绑定到hdt对象上即 hdt.a()。</p><ul><li>与 call/apply 不同bind不会立即执行</li><li>bind 是复制函数形为会返回新函数</li></ul><p>bind是复制函数行为</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token operator">===</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span><span class="token comment" spellcheck="true">//bind是新复制函数</span><span class="token keyword">let</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token operator">==</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//false</span></code></pre><p>绑定参数注意事项</p><pre class=" language-java"><code class="language-java">function <span class="token function">hdt</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>f <span class="token operator">+</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//使用bind会生成新函数</span>let newFunc <span class="token operator">=</span> hdt<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">{</span> f<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//1+3+2 参数2赋值给b即 a=3,b=2</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">newFunc</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在事件中使用<code>bind</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>button<span class="token operator">></span>hdtmk8<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>    <span class="token string">"click"</span><span class="token punctuation">,</span>    <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token punctuation">:</span> <span class="token string">"houdunren.com"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>动态改变元素背景颜色，当然下面的例子也可以使用箭头函数处理</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style<span class="token operator">></span>  <span class="token operator">*</span> <span class="token punctuation">{</span>    padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  body <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>    height<span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>    font<span class="token operator">-</span>size<span class="token punctuation">:</span> 3em<span class="token punctuation">;</span>    padding<span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    transition<span class="token punctuation">:</span> 2s<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    justify<span class="token operator">-</span>content<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    background<span class="token punctuation">:</span>  34495e<span class="token punctuation">;</span>    color<span class="token punctuation">:</span>  34495e<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>  houdunren<span class="token punctuation">.</span>com<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">function</span> <span class="token function">Color</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>elem <span class="token operator">=</span> elem<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">" 74b9ff"</span><span class="token punctuation">,</span> <span class="token string">" ffeaa7"</span><span class="token punctuation">,</span> <span class="token string">" fab1a0"</span><span class="token punctuation">,</span> <span class="token string">" fd79a8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>run <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">setInterval</span><span class="token punctuation">(</span>        <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">let</span> pos <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>colors<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>elem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token number">1000</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>  obj<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript Map与WeakMap类型</title>
      <link href="/2020/08/01/JavaScript-Map%E4%B8%8EWeakMap%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/08/01/JavaScript-Map%E4%B8%8EWeakMap%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Map与WeakMap"><a href="#Map与WeakMap" class="headerlink" title="Map与WeakMap"></a>Map与WeakMap</h1><blockquote><p><a href="https://hdtmk8.github.io/">hdtmk8</a> @hdtmk8</p></blockquote><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><hr><p>Map是一组键值对的结构，用于解决以往不能用对象做为键的问题。</p><ul><li>具有极快的查找速度。</li><li>函数，对象，基本类型都可以作为键或值</li></ul><h3 id="声明定义"><a href="#声明定义" class="headerlink" title="声明定义"></a>声明定义</h3><p>可以接受一个数组作为参数，该数组的成员是一个表示键值对的数组：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> m<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"博客地址"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//博客地址</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Map(2) {"hdtmk8" => "博客地址", "alex" => "name"}</span></code></pre><p>使用<code>set</code>方法添加元素，支持链式操作：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">"hdtmk8.github.io"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"make"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//MapIterator {{…} => "hdtmk8.github.io", "name" => "make"}</span></code></pre><p> 对于键是对象的<code>Map</code>， 键保存的是内存地址，值相同但内存地址不同的视为两个键。 </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> hd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token string">"mark"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//mark</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"mark"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//undefined</span></code></pre><h3 id="获取数量"><a href="#获取数量" class="headerlink" title="获取数量"></a>获取数量</h3><p>获取数据数量<code>size</code>：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="元素检测"><a href="#元素检测" class="headerlink" title="元素检测"></a>元素检测</h3><p>检测元素是否存在<code>has()</code>：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>hdtmk8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="读取元素"><a href="#读取元素" class="headerlink" title="读取元素"></a>读取元素</h3><p>使用<code>get()</code>来读取元素：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p> 删除元素</p><p>使用<code>delete()</code>方法删除单个元素：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true 成功删除元素返回true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span>aaa<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//false 没有这个键名</span></code></pre><p>使用<code>clear</code>方法清除Map所有元素：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="遍历数据"><a href="#遍历数据" class="headerlink" title="遍历数据"></a>遍历数据</h3><p>使用<code>keys()/values()/entries()</code>都可以返回可遍历的迭代对象：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"博客地址"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//MapIterator {"hdtmk8", "alex"}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//MapIterator {"博客地址","name"}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//MapIterator{"hdtmk8"=>"博客地址"，"alex"=>"name"}</span></code></pre><p>可以使用<code>keys/values</code>函数遍历键与值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"博客地址"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> hd<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> hd<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>使用<code>for/of</code>遍历操作，直接遍历Map等同于使用<code>entries()</code>函数:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"博客地址"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span>value<span class="token punctuation">]</span> <span class="token keyword">of</span> hd<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>使用<code>fonEach</code>遍历操作：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"博客地址"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h3 id="数组转换"><a href="#数组转换" class="headerlink" title="数组转换"></a>数组转换</h3><p>可以使用<code>展开语法</code>或<code>Array.form</code>静态方法将Map类型转为数组，这样就可以使用数组处理函数了：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"博客地址"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//(2) ["hdtmk8","博客地址"](2)["alex","name"]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>hd<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//(2) ["hdtmk8","博客地址"](2)["alex","name"]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>hd<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//博客地址 alex</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>hd<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8 name</span></code></pre><p>检索包含<code>博客地址</code>的值组成新Map：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"博客地址"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> newArr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span>hd<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"博客地址"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>hd<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="节点集合"><a href="#节点集合" class="headerlink" title="节点集合"></a>节点集合</h3><p>Map的key可以任意类型，下面使用DOM节点佟大为键来记录数据：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>div desc<span class="token operator">=</span><span class="token string">"后盾人"</span><span class="token operator">></span>houdunren<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>div desc<span class="token operator">=</span><span class="token string">"开源系统"</span><span class="token operator">></span>hdcms<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">const</span> divMap<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> divs<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySeletctorAll</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    divs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        divMap<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>div<span class="token punctuation">,</span><span class="token punctuation">{</span>            content<span class="token punctuation">:</span>div<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"desc"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    divMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span>elem<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        elem<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span>divMap<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="实例操作"><a href="#实例操作" class="headerlink" title="实例操作"></a>实例操作</h3><p> 当不接受协议时无法提交表单，并根据自定义信息提示用户：</p><pre><code>&lt;body&gt;&lt;form action=&quot;&quot; onsubmit=&quot;return post()&quot;&gt;    接受协议:    &lt;input type=&quot;checkbox&quot; name=&quot;agreement&quot; message=&quot;请接受接受协议&quot; /&gt;    我是学生:    &lt;input type=&quot;checkbox&quot; name=&quot;student&quot; message=&quot;网站只对学生开放&quot; /&gt;    &lt;input type=&quot;submit&quot; /&gt;  &lt;/form&gt;&lt;/body&gt;&lt;script&gt;    function post(){        let map=new Map();        let inputs=document.querySeletorAll(&quot;[message]&quot;);        //使用Map设置数据        inputs.forEach(item=&gt;{            message:item.getAttribute(&quot;message&quot;),            status:item.checked        })    };    //遍历Map数据    return [...map].every(([item,config])=&gt;{        config.status || alert(config.message);        return config.status;    });    }&lt;/script&gt;</code></pre><h2 id="WeakMap"><a href="#WeakMap" class="headerlink" title="WeakMap"></a>WeakMap</h2><hr><p><strong>WeakMap</strong> 对象是一组键/值对的集</p><ul><li><p>键名必须是对象(引用类型)</p></li><li><p>WeaMap对键名是弱引用的，键值是正常引用</p></li><li><p>垃圾回收不考虑WeaMap的键名，不会改变引用计数器，键在其他地方不被引用时即删除</p></li><li><p>因为WeakMap 是弱引用，由于其他地方操作成员可能会不存在，所以不可以进行<code>forEach( )</code>遍历等操作</p></li><li><p>也是因为弱引用，WeaMap 结构没有keys( )，values( )，entries( )等方法和 size 属性</p></li><li><p>当键的外部引用删除时，系统自动删除数据时使用 <code>WeakMap</code></p></li></ul><h3 id="声明定义-1"><a href="#声明定义-1" class="headerlink" title="声明定义"></a>声明定义</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"bogl"</span><span class="token punctuation">]</span>hd<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span></code></pre><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>下面是WeakMap的常用指令：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"bogl"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加操作</span>hd<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//删除操作</span>hd<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//检索判断</span>hd<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></code></pre><h3 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h3><p>WeakMap的键名对象不会增加引用计数器，如果一个对象不被引用了会自动删除。</p><ul><li><p>下面当<code>hd</code>删除时内存即清除，因为WeakMap的弱引用不会产生引用计数，当引用计数为0时，系统会自动回收这个内存地址。</p></li><li><p>当垃圾回收时因为对象被删除，这里WeakMap也就没有记录了。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>hd<span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//把hd删除</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul><h3 id="实例案例："><a href="#实例案例：" class="headerlink" title="实例案例："></a>实例案例：</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style<span class="token operator">></span>  <span class="token operator">*</span> <span class="token punctuation">{</span>    padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  body <span class="token punctuation">{</span>    padding<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    box<span class="token operator">-</span>sizing<span class="token punctuation">:</span> border<span class="token operator">-</span>box<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  div <span class="token punctuation">{</span>    border<span class="token punctuation">:</span> solid 2px #ddd<span class="token punctuation">;</span>    padding<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    flex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  div<span class="token punctuation">:</span>last<span class="token operator">-</span><span class="token keyword">of</span><span class="token operator">-</span>type <span class="token punctuation">{</span>    margin<span class="token operator">-</span>left<span class="token punctuation">:</span> <span class="token operator">-</span>2px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  ul <span class="token punctuation">{</span>    list<span class="token operator">-</span>style<span class="token punctuation">:</span> none<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    flex<span class="token operator">-</span>direction<span class="token punctuation">:</span> column<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  li <span class="token punctuation">{</span>    height<span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    border<span class="token punctuation">:</span> solid 2px #e67e22<span class="token punctuation">;</span>    margin<span class="token operator">-</span>bottom<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    justify<span class="token operator">-</span>content<span class="token punctuation">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>    align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    padding<span class="token operator">-</span>left<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    color<span class="token punctuation">:</span> #<span class="token number">333</span><span class="token punctuation">;</span>    transition<span class="token punctuation">:</span> 1s<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  a <span class="token punctuation">{</span>    border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    height<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    text<span class="token operator">-</span>decoration<span class="token punctuation">:</span> none<span class="token punctuation">;</span>    text<span class="token operator">-</span>align<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    background<span class="token punctuation">:</span> #16a085<span class="token punctuation">;</span>    color<span class="token punctuation">:</span> white<span class="token punctuation">;</span>    cursor<span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    justify<span class="token operator">-</span>content<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    margin<span class="token operator">-</span>right<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span>remove <span class="token punctuation">{</span>    border<span class="token punctuation">:</span> solid 2px #eee<span class="token punctuation">;</span>    opacity<span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">;</span>    color<span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span>remove a <span class="token punctuation">{</span>    background<span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  p <span class="token punctuation">{</span>    margin<span class="token operator">-</span>top<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  p span <span class="token punctuation">{</span>    display<span class="token punctuation">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>    background<span class="token punctuation">:</span> #16a085<span class="token punctuation">;</span>    padding<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    color<span class="token punctuation">:</span> white<span class="token punctuation">;</span>    margin<span class="token operator">-</span>right<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    margin<span class="token operator">-</span>bottom<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span>php<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span> <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span>js<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span> <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>span<span class="token operator">></span>css<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>strong id<span class="token operator">=</span><span class="token string">"count"</span><span class="token operator">></span>共选了<span class="token number">2</span>门课<span class="token operator">&lt;</span><span class="token operator">/</span>strong<span class="token operator">></span>    <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"lists"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">class</span> <span class="token class-name">Lesson</span> <span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"ul>li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>countELem <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"count"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>listElem <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"lists"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>lis<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        item<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> event <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token keyword">const</span> elem <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">;</span>          <span class="token keyword">const</span> state <span class="token operator">=</span> elem<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"select"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>            elem<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">"select"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span>elem<span class="token punctuation">.</span>parentElement<span class="token punctuation">)</span><span class="token punctuation">;</span>            elem<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"+"</span><span class="token punctuation">;</span>            elem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">"green"</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            elem<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"select"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>elem<span class="token punctuation">.</span>parentElement<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            elem<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"-"</span><span class="token punctuation">;</span>            elem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>lis<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>count <span class="token operator">+</span><span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">lists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>lis<span class="token punctuation">]</span>        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`&lt;span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"span"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span>`</span></span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>countELem<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token string">`共选了</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">课`</span></span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>listElem<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">new</span> <span class="token class-name">Lesson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Map </tag>
            
            <tag> WeakMap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript Set与WeakSet类型</title>
      <link href="/2020/08/01/JavaScript-Set%E4%B8%8EWeakSet%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/08/01/JavaScript-Set%E4%B8%8EWeakSet%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Set与WeakSet"><a href="#Set与WeakSet" class="headerlink" title="Set与WeakSet"></a>Set与WeakSet</h1><blockquote><p><a href="https://hdtmk8.github.io/">hdtmk8</a> @hdtmk8</p></blockquote><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><p>用于存储任何类型的唯一值，无论是基本类型还是对象引用。</p><ul><li>只能保存值没有键名</li><li>严格类型检测，如字符串数字不等于数值型数字</li><li>值是唯一的</li><li>遍历顺序是添加的顺序，方便保存回调函数</li></ul><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><hr><p>使用数组做初始数据：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"make"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//{"hdtmk8","alex","make"}</span></code></pre><p>使用<code>add</code>添加数据，不允许添加重复的值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> <span class="token keyword">set</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">set</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">set</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Set(1) {1}</span></code></pre><p><code>Set</code>是严格类型约束的，下面的数值<code>1</code>与字符串<code>1</code>属于两个不同的值：</p><pre><code>let set = new Set();set.add(1); set.add(&quot;1&quot;);console.log(set); //Set(2) {1,&quot;1&quot;}</code></pre><p>与对象做对比：对象属性最终都会转为字符串，即数值<code>1</code>与字符串<code>1</code>属于相同的值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//{1:"alex"}</span></code></pre><p>使用对象做为键名时，会将对象转为字符串后使用：</p><pre><code>let obj={1:&quot;hdtmk8&quot;,&quot;1&quot;:alex};console.table(obj);let hd={[obj]:&quot;make&quot;};console.table(hd);console.log(hd[obj.toString()]);console.log(hd[&quot;[object Object]&quot;])</code></pre><h4 id="获取数量"><a href="#获取数量" class="headerlink" title="获取数量"></a>获取数量</h4><p>使用<code>size</code>获取元素数量：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//2</span></code></pre><h4 id="元素检测"><a href="#元素检测" class="headerlink" title="元素检测"></a>元素检测</h4><p>使用<code>has</code>检测元素是否存在：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span></code></pre><h4 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h4><p>使用<code>delete</code>方法删除单个元素，返回值为<code>boolean</code>类型：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">,</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">"make"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//false 删除不存在的值返回值为false</span></code></pre><p>使用<code>clear</code>删除所有元素</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//0</span></code></pre><h4 id="数组转换"><a href="#数组转换" class="headerlink" title="数组转换"></a>数组转换</h4><p>可以使用<code>点语法</code>或<code>Array.form</code>静态方法将Set类型轩为数组，这样就可以使用数组处理函数了：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token keyword">set</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">set</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["hdtmk8","alex"];</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">set</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["hdtmk8","alex"];</span></code></pre><p>移除Set中大于5的数值，使用filter过滤函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">"123456789"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>hd<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span>item<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//{"1","2","3","4"}</span></code></pre><h4 id="去除重复"><a href="#去除重复" class="headerlink" title="去除重复"></a>去除重复</h4><p>去除字符串重复：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">"hdtmk8hdt"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre><p>去除数组重复：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//1,2,3,4,5</span></code></pre><h4 id="遍历数据"><a href="#遍历数据" class="headerlink" title="遍历数据"></a>遍历数据</h4><p>使用<code>keys()/values()/entries()</code>都可以返回迭代对象，因为<code>set</code>类型只有值所以<code>keys和values</code>方法结果一致：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> hd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"hdcms"</span><span class="token punctuation">,</span> <span class="token string">"houdunren"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//SetIterator {"hdcms", "houdunren"}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//SetIterator {"hdcms", "houdunren"}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//SetIterator {"hdcms" => "hdcms", "houdunren" => "houdunren"}</span></code></pre><p>可以使用<code>forEach</code>遍历Set数据，默认使用<code>values</code>方法创建迭代器。</p><p>为了保持和遍历数组参数统一，函数中的value与key是一样的。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> <span class="token keyword">set</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用forEach遍历</span><span class="token keyword">set</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>keye<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>也可以使用<code>forof</code>遍历Set数据，默认使用<code>values</code>方法创建迭代器：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//使用for/of遍历</span><span class="token keyword">let</span> <span class="token keyword">set</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> <span class="token keyword">set</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="搜索实例"><a href="#搜索实例" class="headerlink" title="搜索实例"></a>搜索实例</h4><p>下面通过历史搜索的示例体验<code>Set</code>类型</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style<span class="token operator">></span>  body <span class="token punctuation">{</span>      padding<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token operator">*</span> <span class="token punctuation">{</span>      padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  input <span class="token punctuation">{</span>      width<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>      border<span class="token punctuation">:</span> solid 1px #d63031<span class="token punctuation">;</span>      outline<span class="token punctuation">:</span> none<span class="token punctuation">;</span>      padding<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>      box<span class="token operator">-</span>sizing<span class="token punctuation">:</span> border<span class="token operator">-</span>box<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  ul <span class="token punctuation">{</span>      list<span class="token operator">-</span>style<span class="token punctuation">:</span> none<span class="token punctuation">;</span>      width<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>      padding<span class="token operator">-</span>top<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  ul li <span class="token punctuation">{</span>      border<span class="token punctuation">:</span> solid 1px #ddd<span class="token punctuation">;</span>      padding<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>      margin<span class="token operator">-</span>bottom<span class="token punctuation">:</span> <span class="token operator">-</span>1px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  ul li<span class="token punctuation">:</span>nth<span class="token operator">-</span><span class="token keyword">of</span><span class="token operator">-</span><span class="token function">type</span><span class="token punctuation">(</span>odd<span class="token punctuation">)</span> <span class="token punctuation">{</span>      background<span class="token punctuation">:</span> #00b894<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>ul<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>      words<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token keyword">set</span> <span class="token function">keyword</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>words<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">let</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          ul<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>words<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>              ul<span class="token punctuation">.</span>innerHTML <span class="token operator">+</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'&lt;li>'</span> <span class="token operator">+</span> item <span class="token operator">+</span> <span class="token string">'&lt;/li>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'blur'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      obj<span class="token punctuation">.</span>keyword <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>      obj<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="交集"><a href="#交集" class="headerlink" title="交集"></a>交集</h4><p>获取两个集合中共同存在的元素：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdtmk8'</span><span class="token punctuation">,</span> <span class="token string">'alex'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> cms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'make'</span><span class="token punctuation">,</span> <span class="token string">'hdtmk8'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> newSet<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token operator">...</span>hd<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span>cms<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newSet<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//{"hdtmk8"}</span></code></pre><h4 id="差集"><a href="#差集" class="headerlink" title="差集"></a>差集</h4><p>在集合a中出现但不在集合b中出现元素集合：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdtmk8'</span><span class="token punctuation">,</span> <span class="token string">'alex'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> cms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'make'</span><span class="token punctuation">,</span> <span class="token string">'hdtmk8'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> newSet<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token operator">...</span>hd<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span><span class="token operator">!</span>cms<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newSet<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//{"alex"}</span></code></pre><h4 id="并集"><a href="#并集" class="headerlink" title="并集"></a>并集</h4><p>将两个集合合并成一个新的集合，由于Set特性当然也不会产生重复元素：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdtmk8'</span><span class="token punctuation">,</span> <span class="token string">'alex'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> cms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'make'</span><span class="token punctuation">,</span> <span class="token string">'hdtmk8'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> newSet<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span>hd<span class="token punctuation">,</span><span class="token operator">...</span>cms<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newSet<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//{"hdtmk8","alex","make"}</span></code></pre><h2 id="WeakSet"><a href="#WeakSet" class="headerlink" title="WeakSet"></a>WeakSet</h2><hr><p>WeakSet结构同样不会存储重复的值，它的成员必须只能是对象类型的值。</p><ul><li>垃圾回收不考虑WeakSet，即被WeakSet引用时引用计数器不加一，所以对象不被引用时不管WeakSet是否在使用都将删除</li><li>因为WeakSet 是弱引用，由于其他地方操作成员可能会不存在，所以不可以进行<code>forEach( )</code>遍历等操作</li><li>也是因为弱引用，WeakSet 结构没有keys( )，values( )，entries( )等方法和size属性</li><li>因为是弱引用所以当外部引用删除时，系统自动删除数据时使用 <code>WeakMap</code></li></ul><h4 id="声明定义"><a href="#声明定义" class="headerlink" title="声明定义"></a>声明定义</h4><p>以下操作由于数据还是对象类型将产生错误：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span> <span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Invalid value used in weak set</span><span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Invalid value used in weak set</span></code></pre><p>WeakSet的值必须为对象类型：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> WeakS<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Weaks<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>将DOM节点保存到<code>WeakSet</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> Wset<span class="token operator">=</span>doucment<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span>Wset<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><p>下面是<code>WeakSet</code>常用指令：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加操作</span><span class="token keyword">let</span> num<span class="token operator">=</span>hd<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//{"hdtmk8"}</span><span class="token comment" spellcheck="true">//删除操作</span>hd<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//检索判断</span>hd<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></code></pre><h4 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h4><p>WeaSet保存的对象不会增加引用计数器，如果一个对象不被引用了会自动删除。</p><ul><li>下例中的数组被 <code>arr</code> 引用了，引用计数器+1</li><li>数据又添加到了 hd 的WeaSet中，引用计数还是1</li><li>当 <code>arr</code> 设置为null时，引用计数-1 此时对象引用为0</li><li>当垃圾回收时对象被删除，这时WakeSet也就没有记录了</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> hd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>hd<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>arr<span class="token operator">=</span><span class="token keyword">null</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//WeakSet {Array(1)};</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//WeakSet{}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="案例操作："><a href="#案例操作：" class="headerlink" title="案例操作："></a>案例操作：</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style<span class="token operator">></span>  <span class="token operator">*</span> <span class="token punctuation">{</span>    padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  body <span class="token punctuation">{</span>    padding<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  ul <span class="token punctuation">{</span>    list<span class="token operator">-</span>style<span class="token punctuation">:</span> none<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    flex<span class="token operator">-</span>direction<span class="token punctuation">:</span> column<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  li <span class="token punctuation">{</span>    height<span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    border<span class="token punctuation">:</span> solid 2px #e67e22<span class="token punctuation">;</span>    margin<span class="token operator">-</span>bottom<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    justify<span class="token operator">-</span>content<span class="token punctuation">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>    align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    padding<span class="token operator">-</span>left<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    color<span class="token punctuation">:</span> #<span class="token number">333</span><span class="token punctuation">;</span>    transition<span class="token punctuation">:</span> 1s<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  a <span class="token punctuation">{</span>    border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    width<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    height<span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    text<span class="token operator">-</span>decoration<span class="token punctuation">:</span> none<span class="token punctuation">;</span>    text<span class="token operator">-</span>align<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    background<span class="token punctuation">:</span> #16a085<span class="token punctuation">;</span>    color<span class="token punctuation">:</span> white<span class="token punctuation">;</span>    cursor<span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    justify<span class="token operator">-</span>content<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>    margin<span class="token operator">-</span>right<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span>remove <span class="token punctuation">{</span>    border<span class="token punctuation">:</span> solid 2px #eee<span class="token punctuation">;</span>    opacity<span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">;</span>    color<span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span>remove a <span class="token punctuation">{</span>    background<span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>houdunren<span class="token punctuation">.</span>com <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span>x<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>hdcms<span class="token punctuation">.</span>com <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span>x<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span>li<span class="token operator">></span>houdunwang<span class="token punctuation">.</span>com <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span>x<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">class</span> <span class="token class-name">Todos</span> <span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"ul>li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>lists <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">record</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">addEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        item<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> event <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//检测WakeSet中是否存在Li元素</span>          <span class="token keyword">const</span> parentElement <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>parentElement<span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>lists<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>parentElement<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"已经删除此TODO"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//删除后从记录的WakeSet中移除</span>            parentElement<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"remove"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>lists<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span>parentElement<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">record</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>lists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">new</span> <span class="token class-name">Todos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Set </tag>
            
            <tag> WeakSet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript数据类型之Symbol类型</title>
      <link href="/2020/08/01/JavaScript%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BSymbol%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/08/01/JavaScript%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BSymbol%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Symbol"><a href="#Symbol" class="headerlink" title="Symbol"></a>Symbol</h1><blockquote><p><a href="https://hdtmk8.github.io/">hdtmk8</a> @hdtmk8</p></blockquote><p>Symbol用于防止属性名冲突而产生的，比如向第三方对象中添加属性时。</p><p>Symbol的值是唯一的，独一无二的不会重复的,可以把它想象成一个独一无二的特殊字符串。</p><h3 id="基础知识："><a href="#基础知识：" class="headerlink" title="基础知识："></a>基础知识：</h3><hr><h4 id="Symbol-1"><a href="#Symbol-1" class="headerlink" title="Symbol:"></a>Symbol:</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> edu<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//symbol</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd <span class="token operator">==</span> edu<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//false</span></code></pre><p>Symbol不可以添加属性：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hd<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">"hdtmk8"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="描述参数"><a href="#描述参数" class="headerlink" title="描述参数"></a>描述参数</h4><p>可传入字符串用于描述Symbol,方便在控制台分辨Symbol:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"is name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> edu<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"测试功能"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Symbol(is name);</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>edu<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Symbol(这是一个测试)</span></code></pre><p>传入相同参数Symbol也是独立唯一的，因为参数只是描述而已，但使用<code>symbol.for</code>则不会：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> edu<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd <span class="token operator">==</span> edu<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//false</span></code></pre><p>使用<code>description</code>可以获取传入的描述参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre><h4 id="Symbol-for"><a href="#Symbol-for" class="headerlink" title="Symbol.for"></a>Symbol.for</h4><p>根据描述获取Symbol，如果不存在则新建一个Symbol</p><ul><li>使用Symbol.for会在系统中将Symbol登记</li><li>使用symbol则不会登记</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span>Symbol<span class="token punctuation">.</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token string">'hdtmk8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> edu<span class="token operator">=</span>symbol<span class="token punctuation">.</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd <span class="token operator">==</span> edu<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true 如果hd和edu是Symbol定义的则结果为false</span></code></pre><h4 id="Symbol-keyFor"><a href="#Symbol-keyFor" class="headerlink" title="Symbol.keyFor"></a>Symbol.keyFor</h4><p><code>Symbol.keyFor</code>根据使用<code>Symbol.for</code>登记的<code>Symbol</code>返回描述，如果找不到返回undefined:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd<span class="token operator">=</span>Symbol<span class="token punctuation">.</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token string">"mdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//mdtmk8</span><span class="token keyword">let</span> edu<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"mdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>edu<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//undefined</span></code></pre><h4 id="对象属性"><a href="#对象属性" class="headerlink" title="对象属性"></a>对象属性</h4><p>Symbol是独一无二的所以可以保证对象属性的唯一。</p><ul><li>Symbol声明和访问使用<code>[]</code>(变量)形式操作</li><li>也不能使用<code>.</code>语法 因为<code>.</code>语法是操作字符串属性的。</li></ul><p>下面写法是错误的，会将<code>symbol</code>当成字符串<code>symbol</code>处理：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> symbol<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>    symbol<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//{symbol: "alex"}</span></code></pre><p>正确写法是以<code>[]</code>变量形式声明和访问：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> symbol<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// alex</span></code></pre><h3 id="实例操作"><a href="#实例操作" class="headerlink" title="实例操作"></a>实例操作</h3><hr><h4 id="缓存操作"><a href="#缓存操作" class="headerlink" title="缓存操作"></a>缓存操作</h4><p>使用<code>symbol</code>可以解决在保存数据时由于名称相同造成耦合覆盖问题：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Cache</span> <span class="token punctuation">{</span>  <span class="token keyword">static</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">static</span> <span class="token keyword">set</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> <span class="token keyword">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">,</span>  key<span class="token punctuation">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"缓存"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> cart <span class="token operator">=</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">"购物车"</span><span class="token punctuation">,</span>  key<span class="token punctuation">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"购物车"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>Cache<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>key<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>Cache<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>cart<span class="token punctuation">.</span>key<span class="token punctuation">,</span> cart<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Cache<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="遍历属性"><a href="#遍历属性" class="headerlink" title="遍历属性"></a>遍历属性</h4><p><code>Symbol</code>不能使用<code>for/in</code>、<code>for/of</code>遍历操作：</p><pre><code>let symbol=Symbol(&quot;hdtmk8&quot;);let obj={    name:&quot;alex&quot;;    [symbol]:&quot;make&quot;};for(const key in obj){    console.log(key); //name symbol类型的遍历不到}for(const key of Object.key(obj)){    console.log(key); //name}</code></pre><p>可以使用<code>Object.getOwnPropertySymbols</code>获取所有<code>symbol</code>属性：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> symbol<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string">"make"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">getOwnpropertySymbol</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>也可以使用<code>Reflect.ownKeys(obj)</code>获取所有属性包括<code>Symbol</code>：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> symbol<span class="token operator">=</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj<span class="token operator">=</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string">"make"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h5 id="如果对象属性不想被遍历，可以使用Symbol类型保护。"><a href="#如果对象属性不想被遍历，可以使用Symbol类型保护。" class="headerlink" title="如果对象属性不想被遍历，可以使用Symbol类型保护。"></a>如果对象属性不想被遍历，可以使用<code>Symbol</code>类型保护。</h5>]]></content>
      
      
      <categories>
          
          <category> 学习随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Symbol </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript引用类型之数组</title>
      <link href="/2020/07/31/JavaScript%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%95%B0%E7%BB%84/"/>
      <url>/2020/07/31/JavaScript%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-数组"><a href="#JavaScript-数组" class="headerlink" title="JavaScript 数组"></a>JavaScript 数组</h1><blockquote><p><a href="https://hdtmk8.github.io/">hdtmk8.github.io</a>  @hdtmk8  </p></blockquote><p>数组是多个变量值的集合，数组是<code>Array</code>对象的实例，所以可以像对象一样调用方法。 </p><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><hr><p>使用对象方式创建数组：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,3,"hexo","hdtmk8"]</span></code></pre><p>使用字面量创建是推荐的简单作法:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdcms"</span><span class="token punctuation">,</span> <span class="token string">"houdunren"</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p>多维数组定义:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p> 数组是引用类型可以使用<code>const</code>声明并修改它的值 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hexo"</span><span class="token punctuation">,</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["hexo", "hdtmk8","js"]</span></code></pre><p> 使用原型的 <code>length</code>属性可以获取数组元素数量 </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hexo"</span><span class="token punctuation">,</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//2</span></code></pre><p> 数组可以设置任何值，下面是使用索引添加数组 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>hd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"js"</span><span class="token punctuation">;</span></code></pre><p>下面直接设置3号数组，会将1/2索引的数组定义为空值</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>hd<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"js"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//4</span></code></pre><p> 声明多个空元素的数组 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//3</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[empty × 3]</span></code></pre><h4 id="Array-of"><a href="#Array-of" class="headerlink" title="Array.of"></a>Array.of</h4><p> 使用<code>Array.of</code> 与 <code>new Array</code> 不同是设置一个参数时不会创建空元素数组 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> hd <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">of</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[3]</span>hd <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1, 2, 3] </span></code></pre><h4 id="类型检测"><a href="#类型检测" class="headerlink" title="类型检测"></a>类型检测</h4><p> 检测变量是否为数组类型 :</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"hexo"</span><span class="token punctuation">,</span> <span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//false </span></code></pre><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><hr><p>可以将数组转换为字符串也可以将其他类型转换为数组</p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>大部分数据类型都可以使用<code>.toString()</code>函数转换为字符串：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1,2,3</span></code></pre><p>也可以使用函数<code>String</code>转换为字符串：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1,2,3</span></code></pre><p>或使用<code>join</code>连接为字符串：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//1-2-3</span></code></pre><h4 id="Array-from"><a href="#Array-from" class="headerlink" title="Array.from"></a>Array.from</h4><p>使用Array.from可以将类数组转换为数组，类数组指包含<code>length</code>属性或可迭代的对象。</p><ul><li><p>第一个参数为要转换的数据，第二个参数为类似于<code>map</code>函数的回调方法：  </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> str<span class="token operator">=</span><span class="token string">"hdtmk8"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">loge</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["h","d","t","m","k","8"]</span></code></pre></li></ul><p>为对象设置<code>length</code>属性后也可以转换为数组，但下标要为数值或数值字符串：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> user<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token string">"array"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span>length<span class="token punctuation">:</span><span class="token number">2</span>  <span class="token comment" spellcheck="true">//必须设置</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["array",18]</span></code></pre><h3 id="展开语法"><a href="#展开语法" class="headerlink" title="展开语法"></a>展开语法</h3><hr><h4 id="数组合并"><a href="#数组合并" class="headerlink" title="数组合并"></a>数组合并</h4><p>使用展开语法来合并数组相比<code>concat</code>要更简单，使用<code>...</code>可将数组展开为多个值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">logt</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["a","hdtmk8",1,2,3] 把a数组的元素全部都添加到b数组元素的后面</span></code></pre><h4 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h4><p>使用展开语法可以替代<code>arguments</code>来接收任意数量的参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hd</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">hd</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,3,"hdtmk8"]</span></code></pre><p>也可以用于接收部分参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hd</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">hd</span><span class="token punctuation">(</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Alex (4)[1,2,3,"hdtmk8"]</span></code></pre><h3 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h3><hr><p>解构是一种更简洁的赋值特性，可以理解为分解一个数据的结构。</p><ul><li>建议使用let/const声明</li></ul><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>基本使用语法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//数组使用</span><span class="token keyword">let</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span>url<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8.github.io"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre><p>函数使用语法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">hd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre><p>剩余解构用一个变量来接收剩余参数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span><span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//["hexo","alex"];</span></code></pre><p>字符串解构：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"hdtmk8"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Array(13)</span></code></pre><p> 严格模式，非严格模式可以不使用声明指令，严格模式下必须使用声明 。所以建议使用let等声明：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">[</span>web<span class="token punctuation">,</span>url<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>web<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre><p>简洁定义，只赋值部分变量</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> <span class="token punctuation">[</span><span class="token punctuation">,</span>url<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8</span></code></pre><p>使用展开语法获取多个值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hdtmk8,["alex","hexo"];</span></code></pre><p>默认值 为变量设置默认值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span>site<span class="token operator">=</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>site<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hexo</span></code></pre><p>函数参数 数组参数的使用</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hd</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">hd</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"hddtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="合并拆分"><a href="#合并拆分" class="headerlink" title="合并拆分"></a>合并拆分</h3><hr><h4 id="join"><a href="#join" class="headerlink" title="join"></a>join</h4><p>使用<code>join</code>连接字符串：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"htdmk8"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//1-htdmk8-hexo</span></code></pre><h4 id="split"><a href="#split" class="headerlink" title="split"></a>split</h4><p><code>split</code>方法用于将字符串分割成数组，类似<code>join</code>方法的反函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> price<span class="token operator">=</span><span class="token string">"99,97,98"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">loge</span><span class="token punctuation">(</span>price<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["99","97","98"]</span></code></pre><h4 id="concat"><a href="#concat" class="headerlink" title="concat"></a>concat</h4><p><code>concat</code>方法用于连接两个或多个数组，元素是值类型是复制操作，如果是引用类型还是指向同一对象：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> array<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> hd<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> cms<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>hd<span class="token punctuation">,</span>cms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["hdtmk8","alex",1,2,3,4]</span></code></pre><p>也可以使用扩展语法实现连接：</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">,</span><span class="token operator">...</span>hd<span class="token punctuation">,</span><span class="token operator">...</span>cms<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//["hdtmk8","alex",1,2,3,4]</span></code></pre><h4 id="copyWithin"><a href="#copyWithin" class="headerlink" title="copyWithin"></a>copyWithin</h4><p>使用<code>copyWithin</code>从数组中复制一部分到同数组中的另外位置：</p><p>语法说明：</p><pre class=" language-javascript"><code class="language-javascript">array<span class="token punctuation">.</span><span class="token function">copyWithin</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>start<span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>参数说明：</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">target</td><td align="center">必需。复制到指定目标索引位置。</td></tr><tr><td align="center">start</td><td align="center">可选。元素复制的起始位置。</td></tr><tr><td align="center">end</td><td align="center">可选。停止复制的索引位置（默认为array.length）。如果是负值，表示倒数。</td></tr></tbody></table><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">copyWithin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,1,2]</span></code></pre><h3 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h3><hr><p> 数组包含多种查找的函数，需要把这些函数掌握清楚，然后根据不同场景选择合适的函数。 </p><h4 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf"></a>indexOf</h4><p>使用<code>indexOf</code>从前向后查找元素出现的位置，如果找不到返回-1：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2 从前面查找2出现的位置</span></code></pre><p>indexOf是严格类型约束类似于===：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"7"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//-1 代表没有找到</span></code></pre><p>第二个参数用于指定查找开始的位置：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//4</span></code></pre><h4 id="IastindexOf"><a href="#IastindexOf" class="headerlink" title="IastindexOf"></a>IastindexOf</h4><p>使用<code>lastindexOf</code>从后向前查找元素出现的位置，如果找不到返回-1：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//3 从后查找7出现的位置</span></code></pre><p>第二个参数用于指定查找开始位置</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//从第5个元素向前查找</span>console<span class="token punctuation">.</span><span class="token function">loge</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//从最后一个字符向前查找</span></code></pre><h4 id="includes"><a href="#includes" class="headerlink" title="includes"></a>includes</h4><p>使用<code>includes</code>查找字符串返回值是布尔类型更方便判断：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span></code></pre><p>写一个类似<code>includes</code>功能的函数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">includes</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> array<span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">===</span><span class="token operator">=</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//true</span></code></pre><h4 id="find"><a href="#find" class="headerlink" title="find"></a>find</h4><p>find方法找到后会把值返回出来</p><ul><li>如果找不到返回值为<code>undefined</code></li></ul><p>返回第一次找到的值，不继续查找</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> find<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> item<span class="token operator">==</span><span class="token string">"hexo"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hexo</span></code></pre><p>也可以使用<code>find</code>把元素遍历出来：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"hexo"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> find<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//hexo</span></code></pre><p>使用<code>includes</code>等不能查找引用类型，因为它们的内存地址不是相等的：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> user<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">"李四"</span><span class="token punctuation">}</span>，<span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">"张飞"</span><span class="token punctuation">}</span>，<span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> find<span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//undefined</span></code></pre><p><code>find</code>可以方便的查找引用类型：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"李四"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"张三"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"alex"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> find <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>user <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"alex"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//{name:"alex"}</span></code></pre><h4 id="findIndex"><a href="#findIndex" class="headerlink" title="findIndex"></a>findIndex</h4><p><code>findIndex</code>与<code>find</code>的区别是返回索引 值，参数也是：当前值，索引，操作数组</p><ul><li>查找不到时返回-<code>1</code></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"7"</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token function">functio</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> item<span class="token operator">==</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//7</span></code></pre><h4 id="find原理"><a href="#find原理" class="headerlink" title="find原理"></a>find原理</h4><p>下面使用自定义函数</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">find</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>callback<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token keyword">return</span> value<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> undefined<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> res<span class="token operator">=</span><span class="token function">find</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token function">fuctdion</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> item <span class="token operator">==</span> <span class="token number">23</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h3><hr><h4 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h4><p><code>sort</code>每次使用两个值进行比较Array.sort((a,a)=&gt;a-b)</p><ul><li>返回负数a排在b前面，从小到大</li><li>返回正数b排在a前面，从大到小</li><li>返回0时不动</li></ul><p>默认从小到大排序数组元素</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>consosle<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,4,5,7]</span></code></pre><p>使用排序函数从大到小排序，参数一与参数二比较，返回正数为降序，负数为升序：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>v1<span class="token punctuation">,</span>v2<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> v2<span class="token operator">-</span>v1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[9,4,2,1]</span></code></pre><p>下面是按课程点击数由高到低排序 ：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons<span class="token operator">=</span><span class="token punctuation">[</span>  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"媒体查询响应式布局"</span><span class="token punctuation">,</span> click<span class="token punctuation">:</span> <span class="token number">78</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"FLEX 弹性盒模型"</span><span class="token punctuation">,</span> click<span class="token punctuation">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"MYSQL多表查询随意操作"</span><span class="token punctuation">,</span> click<span class="token punctuation">:</span> <span class="token number">99</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> sortLessons <span class="token operator">=</span> lessons<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> v2<span class="token punctuation">.</span>click <span class="token operator">-</span> v1<span class="token punctuation">.</span>click<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sortLessons<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="排序原理"><a href="#排序原理" class="headerlink" title="排序原理"></a>排序原理</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">sort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>callback<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> n <span class="token keyword">in</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> m <span class="token keyword">in</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">,</span>array<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">let</span> temp<span class="token operator">=</span>array<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>                array<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">=</span>array<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span>                array<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> array<span class="token punctuation">;</span><span class="token punctuation">}</span>arr<span class="token operator">=</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h4><p>反转数组排序</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[9,2,4,1]</span></code></pre><h3 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h3><hr><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="for"><a href="#for" class="headerlink" title="for"></a>for</h4><p>根据数组长度结合<code>for</code>循环来遍历数组：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lessons<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  lessons<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token string">`后盾人: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>lessons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lessons<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="for-in"><a href="#for-in" class="headerlink" title="for/in"></a>for/in</h4><p>遍历时的key值为数组的索引：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> lessons<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`标题: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>lessons<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="for-of"><a href="#for-of" class="headerlink" title="for/of"></a>for/of</h4><p>与<code>for/in</code>不同的是<code>for/of</code>每次循环取其中的值面不是索引：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> lessons<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`    标题: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">    栏目: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>category <span class="token operator">==</span> <span class="token string">"css"</span> <span class="token operator">?</span> <span class="token string">"前端"</span> <span class="token punctuation">:</span> <span class="token string">"数据库"</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">  `</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h4><p><code>forEach</code>使函数作用在每个数组元素上，但是没有返回值，下面盒子是截取标签的一个字符：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>lessons<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>    item<span class="token punctuation">.</span>title <span class="token operator">=</span> item<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lessons<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="迭代器操作数组元素"><a href="#迭代器操作数组元素" class="headerlink" title="迭代器操作数组元素"></a>迭代器操作数组元素</h3><hr><h4 id="keys"><a href="#keys" class="headerlink" title="keys"></a>keys</h4><p>通过迭代对象获取索引：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> hd<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> keys<span class="token operator">=</span>hd<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//此时keys就是一个可迭代对象，就可以使用next()方法</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keys<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keys<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>获取数组所有键 ：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"迭代器"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> arr<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>使用while遍历：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr <span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span>value<span class="token punctuation">,</span>done<span class="token punctuation">}</span><span class="token operator">=</span>values<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> done<span class="token operator">===</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="values"><a href="#values" class="headerlink" title="values"></a>values</h4><p>通过迭代对象获取值</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> hd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"hdtmk8"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> values <span class="token operator">=</span> hd<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>获取数组的所有值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> arr<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="entries"><a href="#entries" class="headerlink" title="entries"></a>entries</h4><p>返回数组所有键值对，下面使用解构语法循环：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"hdtmk8"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span>value<span class="token punctuation">]</span> <span class="token keyword">of</span> arr<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="扩展方法"><a href="#扩展方法" class="headerlink" title="扩展方法"></a>扩展方法</h3><hr><h4 id="every"><a href="#every" class="headerlink" title="every"></a>every</h4><p><code>every</code>用于递归的检测元素，要所有元素操作都要返回真结果才为真。</p><p>查看班级中同学的JS成绩是否都及格：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> js<span class="token punctuation">:</span> <span class="token number">89</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"马六"</span><span class="token punctuation">,</span> js<span class="token punctuation">:</span> <span class="token number">55</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> js<span class="token punctuation">:</span> <span class="token number">78</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> resust<span class="token operator">=</span>user<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> user<span class="token punctuation">.</span>js <span class="token operator">>=</span><span class="token number">60</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resust<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>标题的关键词检查：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'hdtmk8'</span><span class="token punctuation">,</span> <span class="token string">'JS'</span><span class="token punctuation">,</span> <span class="token string">'css'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> title <span class="token operator">=</span> <span class="token string">'我的个人博客地址hdtmk8.github.io'</span><span class="token punctuation">;</span><span class="token keyword">let</span> state <span class="token operator">=</span> words<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> title<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'标题必须包含所有关键词'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="some"><a href="#some" class="headerlink" title="some"></a>some</h4><p>使用<code>some</code>函数可以递归的检测元素，如果有一个返回true,表达式结果就是真。第一个参数为元素，第二个参数为索引，第三个参数为原数组。</p><p>下面是使用<code>some</code>检测规则关键词的示例，如果匹配到一个词就提示违规：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'hdtmk8'</span><span class="token punctuation">,</span> <span class="token string">'JS'</span><span class="token punctuation">,</span> <span class="token string">'css'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> title <span class="token operator">=</span> <span class="token string">'我的个人博客地址hdtmk8.github.io'</span><span class="token punctuation">;</span><span class="token keyword">let</span> state <span class="token operator">=</span> words<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> title<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"标题含有违规关键词"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p>使用<code>filter</code>可以过滤数据中元素，下面是获取所有在css栏目的课程：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> cssLessons<span class="token operator">=</span>lessons<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>category<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'css'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cssLessons<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>过滤元素的方法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">except</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> excepts<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> newArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> elem <span class="token keyword">of</span> array<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>excepts<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">)</span> newArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> newArray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">except</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,4]</span></code></pre><h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><p>使用<code>map</code>映射可以在数组的所有元素上应用函数，用于映射出新的值。</p><p>获取数组所有标题组合的新数组：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lessons<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item<span class="token operator">=</span><span class="token operator">></span>item<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>为所有标题添加上hdtmk8：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> lessons <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'媒体查询响应式布局'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'FLEX 弹性盒模型'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'css'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>title<span class="token punctuation">:</span> <span class="token string">'MYSQL多表查询随意操作'</span><span class="token punctuation">,</span>category<span class="token punctuation">:</span> <span class="token string">'mysql'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>lessons<span class="token operator">=</span>lessons<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token punctuation">{</span>    item<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token template-string"><span class="token string">`[hdtmk8]</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">[</span><span class="token string">"title"</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>    <span class="token keyword">return</span> item<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lessons<span class="token punctuation">)</span></code></pre><h4 id="超好用的reduce"><a href="#超好用的reduce" class="headerlink" title="超好用的reduce"></a>超好用的reduce</h4><p>使用<code>reduce</code>与reduceRight函数可以迭代数组的所有元素，<code>reduce</code>从前开始，<code>reduceRight</code>从后面开始。</p><p>第一个参数是执行函数，第二个参数为初始值</p><ul><li>传入第二个参数时将所有元素循环一遍</li><li>不传第二个参数时从第二个元素开始循环</li></ul><p>函数参数说明如下：</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">prev</td><td align="center">上次调用回调函数返回的结果</td></tr><tr><td align="center">cur</td><td align="center">当前的元素值</td></tr><tr><td align="center">index</td><td align="center">当前的索引</td></tr><tr><td align="center">array</td><td align="center">原数组</td></tr></tbody></table><p>统计元素出现的次数：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">countArrayElem</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>elem<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduct</span><span class="token punctuation">(</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span>cur<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">(</span>total<span class="token operator">+</span><span class="token operator">=</span>cur<span class="token operator">==</span>elem<span class="token operator">?</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">let</span> numbers<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">countArrayElem</span><span class="token punctuation">(</span>numbers<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//2</span></code></pre><p>取数组中的最大值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">arrayMax</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span>max<span class="token punctuation">,</span>elem<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">(</span>max <span class="token operator">></span> elem <span class="token operator">?</span> max <span class="token punctuation">:</span> elem<span class="token punctuation">)</span><span class="token punctuation">,</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">arrayMax</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p> 取价格最高的商品 :</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> cart <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"iphone"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">12000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"imac"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">25000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"ipad"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">3600</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">maxPrice</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span>goods<span class="token punctuation">,</span>elem<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">(</span>goods<span class="token punctuation">.</span>price <span class="token operator">></span>  elem<span class="token punctuation">.</span>price <span class="token operator">?</span> goods<span class="token punctuation">:</span>elem<span class="token punctuation">)</span><span class="token punctuation">,</span>    array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">maxPrice</span><span class="token punctuation">(</span>cart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>计算购物车中商品总价：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> cart <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"iphone"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">12000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"imac"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">25000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"ipad"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">3600</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> total<span class="token operator">=</span>cart<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span>total<span class="token punctuation">,</span>goods<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>total<span class="token operator">+</span><span class="token operator">=</span>goods<span class="token punctuation">.</span>price<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//40600</span></code></pre><p>获取价格超过1万的商品名称：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> goods <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"iphone"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">12000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"imac"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">25000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"ipad"</span><span class="token punctuation">,</span> price<span class="token punctuation">:</span> <span class="token number">3600</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getNameByPrice</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>price<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>goods<span class="token punctuation">,</span>elem<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>elem<span class="token punctuation">.</span>price <span class="token operator">></span> price<span class="token punctuation">)</span><span class="token punctuation">{</span>            goods<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> goods<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>elem<span class="token operator">=</span><span class="token operator">></span>elem<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token function">getNameByPrice</span><span class="token punctuation">(</span>goods<span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>使用<code>reduce</code>实现数组去重：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> filterArr<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span>cur<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pre<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token operator">===</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        pre<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span>pre<span class="token punctuation">,</span>cur<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> pre<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filterArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//[1,2,6]</span></code></pre><h3 id="动画案例"><a href="#动画案例" class="headerlink" title="动画案例"></a>动画案例</h3><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token operator">&lt;</span>style<span class="token operator">></span>      body <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>        height<span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>        display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        justify<span class="token operator">-</span>content<span class="token punctuation">:</span> center<span class="token punctuation">;</span>        align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>        background<span class="token punctuation">:</span> #2c3e50<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token operator">*</span> <span class="token punctuation">{</span>        padding<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      div <span class="token punctuation">{</span>        color<span class="token punctuation">:</span> #9b59b6<span class="token punctuation">;</span>        font<span class="token operator">-</span>size<span class="token punctuation">:</span> 5em<span class="token punctuation">;</span>        font<span class="token operator">-</span>weight<span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        text<span class="token operator">-</span>transform<span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>        cursor<span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      div <span class="token operator">></span> span <span class="token punctuation">{</span>        position<span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        display<span class="token punctuation">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token punctuation">.</span>changeColor <span class="token punctuation">{</span>        animation<span class="token operator">-</span>name<span class="token punctuation">:</span> changeColor<span class="token punctuation">;</span>        animation<span class="token operator">-</span>duration<span class="token punctuation">:</span> 1s<span class="token punctuation">;</span>        animation<span class="token operator">-</span>direction<span class="token punctuation">:</span> alternate<span class="token punctuation">;</span>        animation<span class="token operator">-</span>iteration<span class="token operator">-</span>count<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>        animation<span class="token operator">-</span>timing<span class="token operator">-</span><span class="token keyword">function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      @keyframes changeColor <span class="token punctuation">{</span>        <span class="token number">50</span><span class="token operator">%</span> <span class="token punctuation">{</span>          color<span class="token punctuation">:</span> #f1c40f<span class="token punctuation">;</span>          transform<span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        to <span class="token punctuation">{</span>          color<span class="token punctuation">:</span> #9b59b6<span class="token punctuation">;</span>          transform<span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>  <span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>houdunren<span class="token punctuation">.</span>com<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span>  <span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">let</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">[</span><span class="token operator">...</span>div<span class="token punctuation">.</span>textContent<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> cur<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      pre <span class="token operator">==</span> index <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"span"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      span<span class="token punctuation">.</span>textContent <span class="token operator">=</span> cur<span class="token punctuation">;</span>      div<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>span<span class="token punctuation">)</span><span class="token punctuation">;</span>      span<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mouseover"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"changeColor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      span<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"animationend"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"changeColor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
